```typescript
import { LitElement, html } from 'lit'
import { customElement, property } from 'lit/decorators.js'
import svgIcon from '../../../icons/battery-50.svg'

/**
 * WARNING: This is an autogenerated component.
 * Do not make any changes to this file or they will be overwritten on build.
 * The template for this file is located in the generate-icons.js util file.
 * /

/** @internal **/
@customElement('rux-icon-battery-50')
export class RuxIconBattery50 extends LitElement {
    /**
     * The size of the icon. Can be 'extra-small', 'small', 'normal', 'large', 'auto' or any custom value ('30px', '1rem', '3.321em')
     */
    @property({ type: String })
    size:
        | 'extra-small'
        | 'small'
        | 'normal'
        | 'large'
        | 'auto'
        | string = 'auto'

    get iconSize() {
        const sizes: { [key: string]: any } = {
            'extra-small': '1rem',
            small: '2rem',
            normal: '3rem',
            large: '4rem',
        }

        if (sizes[this.size]) {
            return sizes[this.size]
        } else {
            return this.size
        }
    }

    render() {
        // Lit uses tagged template literals for rendering.
        // Inline styles can be applied by creating a style string.
        // .innerHTML is used for property binding to safely inject the SVG string.
        const style = `height: ${this.iconSize}; width: ${this.iconSize};`

        return html`<div style="${style}" .innerHTML="${svgIcon}"></div>`
    }
}
```