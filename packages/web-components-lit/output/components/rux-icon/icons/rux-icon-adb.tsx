To convert the Stencil.js component to LitElement, we'll replace Stencil's decorators and rendering logic with Lit's equivalents.

Key changes:
1.  **Imports**: Replace Stencil's imports with `LitElement`, `html`, `customElement`, `property`, and `unsafeHTML`.
2.  **Base Class**: Extend `LitElement` instead of just being a class.
3.  **Decorator**: Replace `@Component` with `@customElement('rux-icon-adb')`.
4.  **`shadow: false`**: Stencil's `shadow: false` means the component renders its content into its light DOM. In Lit, this is achieved by overriding the `createRenderRoot()` method to return `this`.
5.  **Properties**: Replace `@Prop()` with `@property()`. Add `{ type: String }` for explicit type declaration, though Lit can often infer it.
6.  **Rendering**: Replace Stencil's `h()` (JSX) with Lit's `html` template literal. For `innerHTML`, use Lit's `unsafeHTML` directive.

Here's the converted LitElement component:

```typescript
import { LitElement, html } from 'lit'
import { customElement, property } from 'lit/decorators.js'
import { unsafeHTML } from 'lit/directives/unsafe-html.js' // Required for innerHTML equivalent
import svgIcon from '../../../icons/adb.svg'

/**
 * WARNING: This is an autogenerated component.
 * Do not make any changes to this file or they will be overwritten on build.
 * The template for this file is located in the generate-icons.js util file.
 * /

/** @internal **/
@customElement('rux-icon-adb')
export class RuxIconAdb extends LitElement {
    /**
     * The size of the icon. Can be 'extra-small', 'small', 'normal', 'large', 'auto' or any custom value ('30px', '1rem', '3.321em')
     */
    @property({ type: String })
    size: 'extra-small' | 'small' | 'normal' | 'large' | 'auto' | string = 'auto'

    /**
     * Stencil's `shadow: false` means the component renders into its light DOM.
     * To replicate this in LitElement, override `createRenderRoot` to return `this`.
     * If you prefer shadow DOM (which is Lit's default and generally recommended for encapsulation),
     * you can remove this method.
     */
    createRenderRoot() {
        return this // Renders to the component's light DOM
    }

    get iconSize() {
        const sizes: { [key: string]: string } = {
            'extra-small': '1rem',
            small: '2rem',
            normal: '3rem',
            large: '4rem',
        }

        if (sizes[this.size]) {
            return sizes[this.size]
        } else {
            return this.size
        }
    }

    render() {
        // Lit can directly use style objects within the template
        const style = {
            height: this.iconSize,
            width: this.iconSize,
        }

        return html`<div style=${style}>${unsafeHTML(svgIcon)}</div>`
    }
}
```