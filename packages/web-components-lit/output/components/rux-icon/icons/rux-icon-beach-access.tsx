```typescript
import { LitElement, html } from 'lit'
import { customElement, property } from 'lit/decorators.js'
import { styleMap } from 'lit/directives/style-map.js'
import svgIcon from '../../../icons/beach-access.svg'

/**
 * WARNING: This is an autogenerated component.
 * Do not make any changes to this file or they will be overwritten on build.
 * The template for this file is located in the generate-icons.js util file.
 */

/** @internal **/
@customElement('rux-icon-beach-access')
export class RuxIconBeachAccess extends LitElement {
    /**
     * By default, LitElement components render to the shadow DOM.
     * In this case, we want to render to the light DOM for better
     * styling and accessibility integration.
     */
    createRenderRoot() {
        return this
    }

    /**
     * The size of the icon. Can be 'extra-small', 'small', 'normal', 'large', 'auto' or any custom value ('30px', '1rem', '3.321em')
     */
    @property({ type: String })
    size:
        | 'extra-small'
        | 'small'
        | 'normal'
        | 'large'
        | 'auto'
        | string = 'auto'

    get iconSize() {
        const sizes: { [key: string]: any } = {
            'extra-small': '1rem',
            small: '2rem',
            normal: '3rem',
            large: '4rem',
        }

        if (sizes[this.size]) {
            return sizes[this.size]
        } else {
            return this.size
        }
    }

    render() {
        const style = {
            height: this.iconSize,
            width: this.iconSize,
        }

        // Using styleMap for dynamic styles and .innerHTML for injecting the SVG string
        return html`<div style=${styleMap(style)} .innerHTML=${svgIcon}></div>`
    }
}
```